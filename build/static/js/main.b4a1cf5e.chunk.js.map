{"version":3,"sources":["../node_modules/typescript/lib sync","Compiler.ts","NodeRaw.tsx","ui/DetailBox.tsx","state/SelectionStore.ts","ui/NodeButton.tsx","Utils.tsx","NodeTypeChecker.tsx","NodeDetails.tsx","state/ExpandStore.ts","Tree.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","createProgram","sourceFile","ts","Latest","files","compilerHost","getSourceFile","fileName","languageVersion","onError","getDefaultLibFileName","writeFile","getCurrentDirectory","getDirectories","path","fileExists","readFile","getFullText","undefined","getCanonicalFileName","useCaseSensitiveFileNames","getNewLine","getEnvironmentVariable","program","rootNames","Object","options","strict","target","allowJs","ES2015","host","typeChecker","getTypeChecker","LabelButton","ChildValue","label","value","React","expanded","setExpanded","Array","isArray","onClick","length","css","map","element","i","key","Number","isNaN","String","JSON","stringify","Item","node","children","forEach","push","NodeRaw","TypeLabel","DetailBox","create","set","selectedNode","selectedPath","hoverNode","setSelectedNode","iter","parent","unshift","setHoverNode","useSelectionStore","Styles","button","NodeButton","onNodeSelect","buttonStyle","customLabel","className","state","onMouseEnter","onMouseLeave","kind","getNodeName","nodeName","name","text","tagName","tag","getTsFlags","flagEnum","flags","rv","values","filter","flag","includes","NodeType","nodeType","typeToString","join","NodeSymbol","nodeSymbol","window","$symbol","valueDeclaration","NodeScope","symbols","getSymbolsInScope","FunctionScopedVariable","BlockScopedVariable","Property","EnumMember","Function","Class","Interface","symbol","NodeTypeChecker","getTypeAtLocation","getSymbolAtLocation","breadcrumbButton","tabButton","isSelected","NodeBreadcrumbs","current","SourceFile","toString","match","PropertyTable","data","ChildRow","ChildProperty","ChildNodeName","ChildLine","NumChildContext","ChildValueLine","index","numChild","ChildSingleValueLine","Resizer","heightRef","setHeight","onMouseMoveRef","onMouseUpRef","removeEventListener","onMouseDown","startY","pageY","startHeightPx","innerHeight","deltaY","newHeight","addEventListener","Tabs","selectedTab","onSelect","DefaultBody","nonChildProperties","setCode","childNodes","Provider","childValue","pos","end","modifierFlagsCache","transformFlags","x","NodeText","getText","NodeDetails","tab","setTab","heightDivRef","nodeNameText","ref","height","heightDiv","style","minHeight","pathToString","Set","isExpanded","newExpanded","add","slice","delete","collapseAll","useExpandStore","treeNode","treeNodeName","treeNodePathSelected","treeNodeSelected","treeNodeHover","Pointer","SymbolMarker","TreeNode","has","forEachChild","childNode","isHover","childIsHover","parentNode","isParentNode","isPathSelected","anchorRef","scrollIntoViewIfNeeded","isLandmarkNodeValue","isLandmarkNode","Editor","editorRef","onChange","useEffect","onResize","layout","language","theme","minimap","enabled","newValue","editorWillMount","monaco","languages","typescript","typescriptDefaults","setCompilerOptions","ScriptTarget","ESNext","allowNonTsExtensions","jsx","JsxEmit","Preserve","editorDidMount","editor","focus","memo","Output","selectNode","selectedNodeRef","useRef","deltaDecorationsRef","$node","start","getStart","selection","monacoEditor","line","character","setSelection","deltaDecorations","range","revealRangeInCenterIfOutsideViewport","sourceFileRef","d","onDidChangeCursorPosition","source","editorModel","getModel","position","getOffsetAt","getNodeForPosition","child","dispose","onKeyDown","document","activeElement","body","isFirstChild","takeNextNode","prevNode","EditorResizer","editorWidthRef","setEditorWidth","startX","pageX","startWidthPx","innerWidth","deltaX","newWidth","App","useState","localStorage","getItem","editorDivRef","editorLayout","useMemo","f","ms","timeout","setTimeout","throttle","updateProgram","updateProgramThrottled","fn","args","clearTimeout","throttleEnd","$typeChecker","setItem","editorWidth","editorDiv","width","minWidth","Boolean","location","hostname","ReactDOM","render","StrictMode","styles","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b4a1cf5e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 310;","import * as ts from \"typescript\";\n\nexport function createProgram(code: string) {\n  const sourceFile = ts.createSourceFile(\n    \"index.tsx\",\n    code,\n    ts.ScriptTarget.Latest,\n    true\n  );\n  const files: Record<string, ts.SourceFile> = {\n    \"index.tsx\": sourceFile,\n  };\n  const compilerHost: ts.CompilerHost = {\n    getSourceFile: (\n      fileName: string,\n      languageVersion: ts.ScriptTarget,\n      onError?: (message: string) => void\n    ) => {\n      return files[fileName];\n    },\n    getDefaultLibFileName: ts.getDefaultLibFileName,\n    writeFile: () => {},\n    getCurrentDirectory: () => \"/\",\n    getDirectories: (path: string) => [],\n    fileExists: (fileName: string) => files[fileName] != null,\n    readFile: (fileName: string) =>\n      files[fileName] != null ? files[fileName]!.getFullText() : undefined,\n    getCanonicalFileName: (fileName: string) => fileName,\n    useCaseSensitiveFileNames: () => true,\n    getNewLine: () => \"\\n\",\n    getEnvironmentVariable: () => \"\",\n  };\n  const program = ts.createProgram({\n    rootNames: Object.keys(files),\n    options: {\n      strict: true,\n      target: ts.ScriptTarget.Latest,\n      allowJs: true,\n      module: ts.ModuleKind.ES2015,\n    },\n    host: compilerHost,\n  });\n  const typeChecker = program.getTypeChecker();\n  return { sourceFile, program, typeChecker };\n}\n","import { css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport * as ts from \"typescript\";\nimport styled from \"@emotion/styled\";\n\nfunction stringify(value: any) {\n  switch (typeof value) {\n    case \"function\":\n      return \"Function\";\n    case \"undefined\":\n      return (\n        <span\n          css={css`\n            color: #b0b0b0;\n          `}\n        >\n          undefined\n        </span>\n      );\n    case \"number\":\n      return Number.isNaN(value) ? \"NaN\" : String(value);\n    default:\n      return JSON.stringify(value);\n  }\n}\n\nconst LabelButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  color: var(--gray);\n  cursor: pointer;\n  padding: 0;\n  text-decoration: underline;\n`;\n\nfunction ChildValue({ label, value }: { label: string; value: any }) {\n  const [expanded, setExpanded] = React.useState(false);\n  if (Array.isArray(value)) {\n    return (\n      <div>\n        <LabelButton\n          onClick={() => {\n            setExpanded((expanded) => !expanded);\n          }}\n        >\n          {label}\n        </LabelButton>\n        {\": \"}\n        {value.length === 0 ? (\n          <span>[]</span>\n        ) : expanded ? (\n          <>\n            <span>[</span>\n            <div\n              css={css`\n                padding-left: 16px;\n              `}\n            >\n              {value.map((element, i) => (\n                <ChildValue label={`${i}`} value={element} key={i} />\n              ))}\n            </div>\n            <span>]</span>\n          </>\n        ) : (\n          <span\n            onClick={() => setExpanded(true)}\n            css={css`\n              cursor: pointer;\n            `}\n          >\n            [..]\n          </span>\n        )}\n      </div>\n    );\n  }\n  if (typeof value === \"object\") {\n    return (\n      <div>\n        <LabelButton\n          onClick={() => {\n            setExpanded((expanded) => !expanded);\n          }}\n        >\n          {label}\n        </LabelButton>\n        {\": \"}\n        {expanded ? (\n          <>\n            <span>{\"{\"}</span>\n            <div\n              css={css`\n                padding-left: 16px;\n              `}\n            >\n              {Object.keys(value).map((key) => (\n                <ChildValue label={key} value={value[key]} key={key} />\n              ))}\n            </div>\n            <div>{\"}\"}</div>\n          </>\n        ) : (\n          <span\n            onClick={() => setExpanded(true)}\n            css={css`\n              cursor: pointer;\n            `}\n          >\n            {\"{..}\"}\n          </span>\n        )}\n      </div>\n    );\n  }\n  return (\n    <div>\n      <span\n        css={css`\n          color: var(--gray);\n        `}\n      >\n        {label}:{\" \"}\n      </span>\n      {stringify(value)}\n    </div>\n  );\n}\n\nfunction Item({ node }: { node: ts.Node }) {\n  const children: Array<React.ReactNode> = [];\n  Object.keys(node).forEach((key, i) => {\n    children.push(\n      <ChildValue label={key} value={(node as any)[key]} key={key} />\n    );\n  });\n  return (\n    <>\n      <span>{\"{\"}</span>\n      <div\n        css={css`\n          padding-left: 16px;\n        `}\n      >\n        {children}\n      </div>\n      <div>{\"}\"}</div>\n    </>\n  );\n}\n\nexport default function NodeRaw({ node }: { node: ts.Node }) {\n  return (\n    <div>\n      <Item node={node} />\n    </div>\n  );\n}\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport * as React from \"react\";\n\nconst TypeLabel = styled.label`\n  background-color: var(--white);\n  font-size: 10px;\n  padding: 0 4px;\n  position: absolute;\n  left: 4px;\n  top: -8px;\n`;\n\nexport default function DetailBox({\n  label,\n  children,\n}: {\n  label: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <div\n      css={css`\n        border-top: 1px solid var(--very-light);\n        margin: 12px -8px 8px;\n        padding: 7px;\n        position: relative;\n      `}\n    >\n      <TypeLabel>{label}</TypeLabel>\n      {children}\n    </div>\n  );\n}\n","import create from \"zustand\";\nimport * as ts from \"typescript\";\n\nconst [useStore] = create<{\n  selectedNode: ts.Node | undefined;\n  selectedPath: Array<ts.Node> | undefined;\n  hoverNode: ts.Node | undefined;\n  setSelectedNode: (node: ts.Node | undefined) => void;\n  setHoverNode: (node: ts.Node | undefined) => void;\n}>((set) => ({\n  selectedNode: undefined,\n  selectedPath: undefined,\n  hoverNode: undefined,\n  setSelectedNode: (node: ts.Node | undefined) => {\n    if (node) {\n      let selectedPath = [];\n      let iter = node.parent;\n      while (iter !== undefined) {\n        selectedPath.unshift(iter);\n        iter = iter.parent;\n      }\n      set({\n        selectedNode: node,\n        selectedPath,\n      });\n    } else {\n      set({\n        selectedNode: undefined,\n        selectedPath: undefined,\n      });\n    }\n  },\n  setHoverNode: (node: ts.Node | undefined) => {\n    set({ hoverNode: node });\n  },\n}));\n\nexport const useSelectionStore = useStore;\n","import { css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport * as ts from \"typescript\";\nimport { useSelectionStore } from \"../state/SelectionStore\";\n\nconst Styles = {\n  button: css`\n    padding: 3px 6px;\n    margin: 2px 0;\n    border: 1px solid var(--gray);\n    border-radius: 4px;\n  `,\n};\n\nexport default function NodeButton({\n  node,\n  onNodeSelect,\n  buttonStyle = false,\n  customLabel,\n  className,\n}: {\n  node: ts.Node;\n  onNodeSelect: (node: ts.Node) => void;\n  buttonStyle?: boolean;\n  customLabel?: string;\n  className?: string;\n}) {\n  const setHoverNode = useSelectionStore((state) => state.setHoverNode);\n  return (\n    <button\n      onClick={() => onNodeSelect(node)}\n      onMouseEnter={() => setHoverNode(node)}\n      onMouseLeave={() => setHoverNode(undefined)}\n      css={css(\n        css`\n          background-color: transparent;\n          padding: 0;\n          border: 0;\n          cursor: pointer;\n          margin: 0;\n          outline-style: none;\n        `,\n        buttonStyle ? Styles.button : undefined\n      )}\n      className={className}\n    >\n      {customLabel !== undefined ? customLabel : ts.SyntaxKind[node.kind]}\n    </button>\n  );\n}\n","import * as ts from \"typescript\";\n\nexport function getNodeName(node: ts.Node): string | undefined {\n  const nodeName = (node as any).name;\n  if (nodeName !== undefined) {\n    return nodeName.text;\n  }\n  const tagName = (node as any).tagName;\n  if (tagName !== undefined) {\n    return `<${tagName.text}>`;\n  }\n  const tag = (node as any).tag;\n  if (tag !== undefined) {\n    return tag.text;\n  }\n  return undefined;\n}\n\nexport function isLandmarkNode(node: ts.Node): boolean {\n  return (\n    ts.isVariableDeclaration(node) ||\n    ts.isFunctionDeclaration(node) ||\n    ts.isClassDeclaration(node) ||\n    ts.isPropertyDeclaration(node) ||\n    ts.isMethodDeclaration(node)\n  );\n}\n\nexport function getNodeForPosition(\n  node: ts.Node,\n  position: number\n): ts.Node | undefined {\n  if (position < node.pos || position > node.end) {\n    return;\n  }\n  const children: Array<ts.Node> = [];\n  node.forEachChild((child) => {\n    children.push(child);\n  });\n  for (const child of children) {\n    if (child.pos <= position && child.end >= position) {\n      return getNodeForPosition(child, position);\n    }\n  }\n  return node;\n}\n\nexport function getTsFlags<F>(flagEnum: F, flags: number): Array<F> {\n  const rv: Array<F> = [];\n  Object.values(flagEnum)\n    .filter((flag) => typeof flag === \"number\")\n    .forEach((flag: any) => {\n      if (flag !== 0 && (flags & flag) === flag && !rv.includes(flag)) {\n        rv.push(flag);\n      }\n    });\n  return rv;\n}\n\nexport function throttle<F extends Function>(f: F, ms: number) {\n  let timeout: NodeJS.Timeout | undefined;\n  return () => {\n    if (timeout === undefined) {\n      timeout = setTimeout(() => {\n        timeout = undefined;\n        f();\n      }, ms);\n    }\n  };\n}\n\nexport function getPathForNode(node: ts.Node): Array<number> {\n  const path: Array<number> = [];\n  let iter = node;\n  while (!ts.isSourceFile(iter)) {\n    const parentNode = iter.parent;\n    let i = 0;\n    const iterNode = iter;\n    parentNode.forEachChild((child: ts.Node) => {\n      if (child === iterNode) {\n        path.unshift(i);\n      }\n      i++;\n    });\n    iter = parentNode;\n  }\n  path.unshift(0);\n  return path;\n}\n\nexport function isParentNode(node: ts.Node, parentNode: ts.Node): boolean {\n  let iter = node.parent;\n  while (iter !== undefined) {\n    if (iter === parentNode) {\n      return true;\n    }\n    iter = iter.parent;\n  }\n  return false;\n}\n","import { css } from \"@emotion/core\";\nimport * as React from \"react\";\nimport * as ts from \"typescript\";\nimport DetailBox from \"./ui/DetailBox\";\nimport NodeButton from \"./ui/NodeButton\";\nimport { getTsFlags } from \"./Utils\";\n\nfunction NodeType({\n  typeChecker,\n  node,\n  nodeType,\n}: {\n  typeChecker: ts.TypeChecker;\n  node: ts.Node;\n  nodeType: ts.Type;\n}) {\n  return (\n    <DetailBox label=\"Type\">\n      <div\n        css={css`\n          font-weight: 600;\n        `}\n      >\n        {typeChecker.typeToString(nodeType, node)}\n      </div>\n      <div>\n        {\"Flags = \"}\n        {getTsFlags(ts.TypeFlags, nodeType.flags)\n          // @ts-ignore\n          .map((flag) => ts.TypeFlags[flag])\n          .join(\" | \")}\n      </div>\n    </DetailBox>\n  );\n}\n\nfunction NodeSymbol({\n  nodeSymbol,\n  onNodeSelect,\n}: {\n  nodeSymbol: ts.Symbol;\n  onNodeSelect: (node: ts.Node) => void;\n}) {\n  // @ts-ignore\n  window.$symbol = nodeSymbol;\n  return (\n    <DetailBox label=\"Symbol Declaration\">\n      {nodeSymbol.valueDeclaration !== undefined ? (\n        <div>\n          <NodeButton\n            node={nodeSymbol.valueDeclaration}\n            onNodeSelect={onNodeSelect}\n            buttonStyle\n          />\n        </div>\n      ) : null}\n    </DetailBox>\n  );\n}\n\nfunction NodeScope({\n  typeChecker,\n  node,\n  onNodeSelect,\n}: {\n  typeChecker: ts.TypeChecker;\n  node: ts.Node;\n  onNodeSelect: (node: ts.Node) => void;\n}) {\n  const symbols = typeChecker.getSymbolsInScope(\n    node,\n    ts.SymbolFlags.FunctionScopedVariable |\n      ts.SymbolFlags.BlockScopedVariable |\n      ts.SymbolFlags.Property |\n      ts.SymbolFlags.EnumMember |\n      ts.SymbolFlags.Function |\n      ts.SymbolFlags.Class |\n      ts.SymbolFlags.Interface\n  );\n  return (\n    <DetailBox label=\"Scope\">\n      <div>\n        {symbols.map((symbol, i) => {\n          if (symbol.valueDeclaration !== undefined) {\n            return (\n              <NodeButton\n                node={symbol.valueDeclaration}\n                onNodeSelect={onNodeSelect}\n                customLabel={symbol.name}\n                buttonStyle\n                css={css`\n                  margin-right: 8px;\n                `}\n                key={i}\n              />\n            );\n          }\n          return null;\n        })}\n      </div>\n    </DetailBox>\n  );\n}\n\nexport default function NodeTypeChecker({\n  node,\n  onNodeSelect,\n  typeChecker,\n}: {\n  node: ts.Node;\n  onNodeSelect: (node: ts.Node) => void;\n  typeChecker: ts.TypeChecker;\n}) {\n  const nodeType = React.useMemo(() => {\n    if (node.parent === undefined) {\n      return undefined;\n    }\n    return typeChecker.getTypeAtLocation(node);\n  }, [typeChecker, node]);\n  const nodeSymbol = React.useMemo(\n    () => typeChecker.getSymbolAtLocation(node),\n    [typeChecker, node]\n  );\n\n  return (\n    <div>\n      {nodeType !== undefined ? (\n        <NodeType typeChecker={typeChecker} node={node} nodeType={nodeType} />\n      ) : null}\n      {nodeSymbol !== undefined ? (\n        <NodeSymbol nodeSymbol={nodeSymbol} onNodeSelect={onNodeSelect} />\n      ) : null}\n      <NodeScope\n        typeChecker={typeChecker}\n        node={node}\n        onNodeSelect={onNodeSelect}\n      />\n    </div>\n  );\n}\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport * as React from \"react\";\nimport * as ts from \"typescript\";\nimport { removeNode } from \"./manipulation/NodeManipulator\";\nimport NodeRaw from \"./NodeRaw\";\nimport NodeTypeChecker from \"./NodeTypeChecker\";\nimport { useSelectionStore } from \"./state/SelectionStore\";\nimport DetailBox from \"./ui/DetailBox\";\nimport NodeButton from \"./ui/NodeButton\";\nimport { getNodeName, getTsFlags } from \"./Utils\";\n\nconst Styles = {\n  breadcrumbButton: css`\n    &:hover {\n      text-decoration: underline;\n    }\n  `,\n  tabButton: (isSelected: boolean) => css`\n    background-color: transparent;\n    border: 0;\n    border-right: 1px solid var(--very-light);\n    font-weight: ${isSelected ? 600 : 400};\n    padding: 4px;\n  `,\n};\n\nfunction NodeBreadcrumbs({\n  node,\n  onNodeSelect,\n}: {\n  node: ts.Node;\n  onNodeSelect: (node: ts.Node) => void;\n}) {\n  const children = [];\n  let iter = node;\n  let i = 0;\n  while (iter !== undefined) {\n    const current = iter;\n    children.unshift(\n      <NodeButton\n        node={current}\n        onNodeSelect={onNodeSelect}\n        css={Styles.breadcrumbButton}\n        key={i}\n      />\n    );\n    if (current.kind !== ts.SyntaxKind.SourceFile) {\n      children.unshift(<span key={`${i}-`}>{\" → \"}</span>);\n    }\n    iter = iter.parent;\n    i++;\n  }\n  return (\n    <div\n      css={css`\n        margin-bottom: 8px;\n      `}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction stringify(value: any) {\n  switch (typeof value) {\n    case \"function\":\n      return value.toString().match(/function[^(]*\\([^)]*\\)/)[0];\n    case \"object\":\n      return value ? JSON.stringify(value, stringify) : \"null\";\n    case \"undefined\":\n      return (\n        <span\n          css={css`\n            color: #b0b0b0;\n          `}\n        >\n          undefined\n        </span>\n      );\n    case \"number\":\n      return Number.isNaN(value) ? \"NaN\" : String(value);\n    default:\n      return JSON.stringify(value);\n  }\n}\n\nfunction PropertyTable({ data }: { data: Array<[string, React.ReactNode]> }) {\n  return (\n    <div\n      css={css`\n        display: flex;\n        margin-bottom: var(--line-height);\n      `}\n    >\n      {data.map(([key, value]) => (\n        <div\n          css={css`\n            padding-right: 8px;\n          `}\n          key={key}\n        >\n          <div\n            css={css`\n              font-weight: 600;\n              white-space: nowrap;\n            `}\n          >\n            {key}\n          </div>\n          <div>{value}</div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst ChildRow = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 28px;\n`;\nconst ChildProperty = styled.div`\n  color: #808080;\n  display: flex;\n  align-items: center;\n  min-width: 128px;\n`;\nconst ChildNodeName = css`\n  padding: 3px 6px;\n  margin: 2px 0;\n  border: 1px solid var(--gray);\n  border-radius: 4px;\n`;\nconst ChildLine = styled.div`\n  background-color: #e0e0e0;\n  height: 1px;\n  flex-grow: 1;\n  min-width: 8px;\n  margin-left: 4px;\n`;\nconst NumChildContext = React.createContext(1);\nfunction ChildValueLine({ index }: { index: number }) {\n  const numChild = React.useContext(NumChildContext);\n  return (\n    <div\n      css={css`\n        display: flex;\n        align-items: center;\n        position: relative;\n        align-self: stretch;\n        margin-right: 4px;\n      `}\n    >\n      <div\n        css={css`\n          background-color: #e0e0e0;\n          height: 1px;\n          width: 16px;\n        `}\n      />\n      <div\n        css={css`\n          position: absolute;\n          width: 1px;\n          background-color: #e0e0e0;\n          left: 0;\n          top: ${index === 0 ? \"50%\" : 0};\n          bottom: ${index === numChild - 1 ? \"50%\" : 0};\n        `}\n      />\n    </div>\n  );\n}\nfunction ChildSingleValueLine() {\n  return (\n    <div\n      css={css`\n        display: flex;\n        align-items: center;\n        position: relative;\n        align-self: stretch;\n        margin-right: 4px;\n      `}\n    >\n      <div\n        css={css`\n          background-color: #e0e0e0;\n          height: 1px;\n          width: 16px;\n        `}\n      />\n    </div>\n  );\n}\n\nfunction Resizer({\n  heightRef,\n  setHeight,\n}: {\n  heightRef: React.RefObject<number>;\n  setHeight: (height: number) => void;\n}) {\n  const onMouseMoveRef = React.useRef<(event: MouseEvent) => void>();\n  const onMouseUpRef = React.useRef<(event: MouseEvent) => void>();\n  const onMouseDown = (e: React.MouseEvent) => {\n    const startY = e.pageY;\n    const startHeightPx = (heightRef.current! / 100) * window.innerHeight;\n    onMouseMoveRef.current = (e: MouseEvent) => {\n      const deltaY = startY - e.pageY;\n      const heightPx = startHeightPx + deltaY;\n      const newHeight = (heightPx / window.innerHeight) * 100;\n      setHeight(newHeight);\n    };\n    onMouseUpRef.current = (e: MouseEvent) => {\n      window.removeEventListener(\"mousemove\", onMouseMoveRef.current!);\n      window.removeEventListener(\"mouseup\", onMouseUpRef.current!);\n      onMouseMoveRef.current = undefined;\n      onMouseUpRef.current = undefined;\n    };\n    window.addEventListener(\"mousemove\", onMouseMoveRef.current);\n    window.addEventListener(\"mouseup\", onMouseUpRef.current);\n  };\n  React.useEffect(() => {\n    return () => {\n      if (onMouseMoveRef.current !== undefined) {\n        window.removeEventListener(\"mousemove\", onMouseMoveRef.current!);\n      }\n      if (onMouseUpRef.current !== undefined) {\n        window.removeEventListener(\"mouseup\", onMouseUpRef.current!);\n      }\n    };\n  }, []);\n  return (\n    <div\n      css={css`\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 8px;\n        cursor: ns-resize;\n      `}\n      onMouseDown={onMouseDown}\n    ></div>\n  );\n}\n\nfunction Tabs({\n  selectedTab,\n  onSelect,\n}: {\n  selectedTab: number;\n  onSelect: (tab: number) => void;\n}) {\n  return (\n    <div\n      css={css`\n        border-top: 1px solid var(--very-light);\n        display: flex;\n      `}\n    >\n      <button\n        onClick={() => onSelect(0)}\n        css={Styles.tabButton(selectedTab === 0)}\n      >\n        Default\n      </button>\n      <button\n        onClick={() => onSelect(1)}\n        css={Styles.tabButton(selectedTab === 1)}\n      >\n        Raw\n      </button>\n      <button\n        onClick={() => onSelect(2)}\n        css={Styles.tabButton(selectedTab === 2)}\n      >\n        TypeChecker\n      </button>\n      <button\n        onClick={() => onSelect(3)}\n        css={Styles.tabButton(selectedTab === 3)}\n      >\n        Text\n      </button>\n    </div>\n  );\n}\n\nfunction DefaultBody({\n  node,\n  onNodeSelect,\n  sourceFile,\n  setCode,\n}: {\n  node: ts.Node;\n  onNodeSelect: (node: ts.Node) => void;\n  sourceFile: ts.SourceFile;\n  setCode: (code: string) => void;\n}) {\n  const nonChildProperties = [];\n  const childNodes = [];\n  for (let key in node) {\n    // @ts-ignore\n    const value = node[key];\n    if (\n      key === \"kind\" ||\n      key === \"pos\" ||\n      key === \"end\" ||\n      key === \"parent\" ||\n      key === \"flags\" ||\n      key === \"modifierFlagsCache\" ||\n      key === \"transformFlags\" ||\n      key === \"original\" ||\n      key === \"symbol\" ||\n      key === \"locals\" ||\n      key === \"nextContainer\" ||\n      key === \"localSymbol\" ||\n      key === \"flowNode\" ||\n      key === \"emitNode\" ||\n      key === \"contextualType\" ||\n      key === \"inferenceContext\" ||\n      key === \"endFlowNode\" ||\n      key === \"returnFlowNode\" ||\n      key === \"lineMap\"\n    ) {\n      continue;\n    } else if (typeof value === \"function\") {\n      continue;\n    } else if (Array.isArray(value)) {\n      childNodes.push(\n        <ChildRow key={key}>\n          <ChildValueLine index={childNodes.length} />\n          <ChildProperty>\n            {key}\n            <ChildLine />\n          </ChildProperty>\n          <div>\n            <NumChildContext.Provider value={value.length}>\n              {value.map((childValue, i) => {\n                return (\n                  <div\n                    css={css`\n                      display: flex;\n                    `}\n                    key={i}\n                  >\n                    <ChildValueLine index={i} />\n                    <NodeButton\n                      node={childValue}\n                      onNodeSelect={onNodeSelect}\n                      buttonStyle\n                    />\n                  </div>\n                );\n              })}\n            </NumChildContext.Provider>\n            {value.length === 0 ? (\n              <div\n                css={css`\n                  display: flex;\n                `}\n              >\n                <ChildSingleValueLine />\n                []\n              </div>\n            ) : null}\n          </div>\n        </ChildRow>\n      );\n    } else if (typeof value === \"object\") {\n      childNodes.push(\n        <ChildRow key={key}>\n          <ChildValueLine index={childNodes.length} />\n          <ChildProperty>\n            {key}\n            <ChildLine />\n          </ChildProperty>\n          <div\n            css={css`\n              display: flex;\n            `}\n          >\n            <ChildSingleValueLine />\n            <NodeButton node={value} onNodeSelect={onNodeSelect} buttonStyle />\n          </div>\n        </ChildRow>\n      );\n    } else {\n      nonChildProperties.push(\n        <div key={key}>\n          <span\n            css={css`\n              color: #808080;\n            `}\n          >\n            {key}\n            {\": \"}\n          </span>\n          {stringify(value)}\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      {childNodes.length > 0 ? (\n        <div\n          css={css`\n            margin: var(--line-height) 0;\n            display: flex;\n          `}\n        >\n          <ChildProperty>\n            <div\n              css={css`\n                ${ChildNodeName}\n                color: var(--dark);\n              `}\n            >\n              {ts.SyntaxKind[node.kind]}\n            </div>\n            <ChildLine />\n          </ChildProperty>\n          <div>\n            <NumChildContext.Provider value={childNodes.length}>\n              {childNodes}\n            </NumChildContext.Provider>\n          </div>\n        </div>\n      ) : null}\n      {nonChildProperties.length > 0 ? (\n        <div\n          css={css`\n            margin-bottom: var(--line-height);\n          `}\n        >\n          {nonChildProperties}\n        </div>\n      ) : null}\n      <PropertyTable\n        data={[\n          [\"Kind\", node.kind],\n          [\"Position\", `${node.pos}-${node.end}`],\n        ]}\n      />\n      <DetailBox label=\"Flags\">\n        <PropertyTable\n          // @ts-ignore\n          data={[\n            [\n              \"Flags\",\n\n              <div>\n                {getTsFlags(ts.NodeFlags, node.flags).map((flag) => (\n                  // @ts-ignore\n                  <div key={flag}>{ts.NodeFlags[flag]}</div>\n                ))}\n              </div>,\n            ],\n            (node as any).modifierFlagsCache !== undefined\n              ? ([\n                  \"Modifier Cache\",\n                  <div>\n                    {getTsFlags(\n                      ts.ModifierFlags,\n                      (node as any).modifierFlagsCache\n                    ).map((flag) => (\n                      // @ts-ignore\n                      <div key={flag}>{ts.ModifierFlags[flag]}</div>\n                    ))}\n                  </div>,\n                ] as [string, React.ReactNode])\n              : undefined,\n            (node as any).transformFlags !== undefined\n              ? ([\n                  \"Transform\",\n                  <div>\n                    {\n                      // @ts-ignore\n                      getTsFlags(\n                        ts.TransformFlags,\n                        (node as any).transformFlags\n                      ).map((flag) => (\n                        // @ts-ignore\n                        <div key={flag}>{ts.TransformFlags[flag]}</div>\n                      ))\n                    }\n                  </div>,\n                ] as [string, React.ReactNode])\n              : undefined,\n          ].filter((x) => x !== undefined)}\n        />\n      </DetailBox>\n    </div>\n  );\n}\n\nfunction NodeText({ node }: { node: ts.Node }) {\n  return (\n    <div\n      css={css`\n        white-space: pre;\n        overflow: auto;\n      `}\n    >\n      {node.getText()}\n    </div>\n  );\n}\n\nexport default function NodeDetails({\n  typeChecker,\n  onNodeSelect,\n  sourceFile,\n  setCode,\n}: {\n  typeChecker: ts.TypeChecker;\n  onNodeSelect: (node: ts.Node) => void;\n  sourceFile: ts.SourceFile;\n  setCode: (code: string) => void;\n}) {\n  const [tab, setTab] = React.useState(0);\n  const heightRef = React.useRef(50);\n  const heightDivRef = React.useRef<HTMLDivElement>(null);\n  const setHeight = (height: number) => {\n    heightRef.current = height;\n    const heightDiv = heightDivRef.current;\n    if (heightDiv !== null) {\n      heightDiv.style.height = `${height}%`;\n      heightDiv.style.minHeight = `${height}%`;\n    }\n  };\n\n  const node = useSelectionStore((state) => state.selectedNode);\n  if (node === undefined) {\n    throw new Error();\n  }\n  const nodeNameText = getNodeName(node);\n  return (\n    <div\n      css={css`\n        border-top: 1px solid #e0e0e0;\n        display: flex;\n        flex-direction: column;\n        height: 50%;\n        min-height: 50%;\n        position: relative;\n      `}\n      ref={heightDivRef}\n    >\n      <div\n        css={css`\n          flex-grow: 1;\n          overflow-y: auto;\n          padding: 8px 16px 16px;\n        `}\n      >\n        <NodeBreadcrumbs node={node} onNodeSelect={onNodeSelect} />\n        <div\n          css={css`\n            font-size: 20px;\n            font-weight: 600;\n            margin-bottom: var(--line-height);\n          `}\n        >\n          {ts.SyntaxKind[node.kind]}\n          {nodeNameText !== undefined ? (\n            <span\n              css={css`\n                background-color: #e0e0e0;\n                color: var(--dark);\n                margin-left: 8px;\n              `}\n            >\n              {nodeNameText}\n            </span>\n          ) : null}\n        </div>\n        {tab === 0 ? (\n          <DefaultBody\n            node={node}\n            onNodeSelect={onNodeSelect}\n            sourceFile={sourceFile}\n            setCode={setCode}\n          />\n        ) : tab === 1 ? (\n          <NodeRaw node={node} />\n        ) : tab === 2 ? (\n          <NodeTypeChecker\n            node={node}\n            onNodeSelect={onNodeSelect}\n            typeChecker={typeChecker}\n          />\n        ) : tab === 3 ? (\n          <NodeText node={node} />\n        ) : null}\n      </div>\n      <Tabs selectedTab={tab} onSelect={setTab} />\n      <Resizer heightRef={heightRef} setHeight={setHeight} />\n    </div>\n  );\n}\n","import create from \"zustand\";\n\nexport const pathToString = (path: Array<number>) => path.join(\",\");\nconst stringToPath = (str: string) => str.split(\",\").map(parseInt);\n\nconst [useStore] = create<{\n  expanded: Set<string>;\n  setExpanded: (path: Array<number>, isExpanded: boolean) => void;\n  collapseAll: () => void;\n}>((set) => ({\n  expanded: new Set<string>([\"0\"]),\n  setExpanded: (path, isExpanded) => {\n    set(({ expanded }) => {\n      const newExpanded = new Set(expanded);\n      if (isExpanded) {\n        for (let i = 1; i <= path.length; i++) {\n          newExpanded.add(pathToString(path.slice(0, i)));\n        }\n      } else {\n        newExpanded.delete(pathToString(path));\n      }\n      return {\n        expanded: newExpanded,\n      };\n    });\n  },\n  collapseAll: () => {\n    set({ expanded: new Set([\"0\"]) });\n  },\n}));\n\nexport const useExpandStore = useStore;\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport * as React from \"react\";\nimport * as ts from \"typescript\";\nimport { pathToString, useExpandStore } from \"./state/ExpandStore\";\nimport { useSelectionStore } from \"./state/SelectionStore\";\nimport NodeButton from \"./ui/NodeButton\";\nimport { getNodeName, isLandmarkNode, isParentNode } from \"./Utils\";\n\nconst Styles = {\n  treeNode: css`\n    color: #808080;\n  `,\n  treeNodeName: css`\n    position: relative;\n  `,\n  treeNodePathSelected: css`\n    border: 1px solid var(--purple);\n    margin: -1px;\n  `,\n  treeNodeSelected: css`\n    background-color: #ae6ab4;\n  `,\n  treeNodeHover: css`\n    background-color: #ae6ab440;\n  `,\n  nodeName: css`\n    margin-left: 8px;\n  `,\n};\nconst Pointer = styled.div`\n  position: absolute;\n  right: 100%;\n  margin-right: 4px;\n  color: var(--purple);\n`;\nfunction SymbolMarker() {\n  return (\n    <div\n      css={css`\n        color: var(--light);\n        position: absolute;\n        right: 0;\n        top: 0;\n      `}\n    >\n      Symbol\n    </div>\n  );\n}\n\nexport function TreeNode({\n  node,\n  path,\n  onNodeSelect,\n}: {\n  node: ts.Node;\n  path: Array<number>;\n  onNodeSelect: (node: ts.Node) => void;\n}) {\n  const expanded = useExpandStore(({ expanded }) =>\n    expanded.has(pathToString(path))\n  );\n  const setExpanded = useExpandStore(({ setExpanded }) => setExpanded);\n  const children: Array<React.ReactNode> = [];\n  let i = 0;\n  node.forEachChild((childNode) => {\n    children.push(\n      <TreeNode\n        node={childNode}\n        path={[...path, i]}\n        onNodeSelect={onNodeSelect}\n        key={i}\n      />\n    );\n    i++;\n  });\n  const nodeNameText = getNodeName(node);\n  const isSelected = useSelectionStore((state) => state.selectedNode === node);\n  const isHover = useSelectionStore((state) => state.hoverNode === node);\n  const childIsHover = useSelectionStore(\n    ({ hoverNode }) => hoverNode !== undefined && isParentNode(hoverNode, node)\n  );\n  const isPathSelected = useSelectionStore(\n    (state) =>\n      state.selectedPath !== undefined && state.selectedPath.includes(node)\n  );\n  const anchorRef = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => {\n    if (isSelected) {\n      // @ts-ignore\n      anchorRef.current?.scrollIntoViewIfNeeded();\n    }\n  }, [isSelected]);\n  const isLandmarkNodeValue = isLandmarkNode(node);\n  return (\n    <div\n      css={css(\n        Styles.treeNode,\n        isPathSelected ? Styles.treeNodePathSelected : undefined\n      )}\n    >\n      {isSelected ? (\n        <Pointer>→</Pointer>\n      ) : isPathSelected ? (\n        <Pointer>↓</Pointer>\n      ) : null}\n      <div\n        css={css(\n          Styles.treeNodeName,\n          isHover ? Styles.treeNodeHover : undefined,\n          isSelected ? Styles.treeNodeSelected : undefined\n        )}\n        ref={anchorRef}\n      >\n        {!ts.isSourceFile(node) && children.length > 0 ? (\n          <button\n            onClick={() => {\n              setExpanded(path, !expanded);\n            }}\n            css={css`\n              background-color: transparent;\n              border: 0;\n              color: var(--light);\n              padding: 0 4px;\n              position: absolute;\n              right: 100%;\n            `}\n          >\n            {expanded ? \"-\" : \"+\"}\n          </button>\n        ) : null}\n        <NodeButton\n          node={node}\n          onNodeSelect={onNodeSelect}\n          css={css`\n            color: ${isSelected ? \"var(--white)\" : \"var(--gray)\"};\n          `}\n        />\n        {nodeNameText !== undefined ? (\n          <span\n            css={css(\n              Styles.nodeName,\n              css`\n                color: ${isSelected\n                  ? \"var(--white)\"\n                  : isLandmarkNodeValue\n                  ? \"var(--dark)\"\n                  : \"var(--gray)\"};\n                font-weight: ${isLandmarkNodeValue ? 600 : 400};\n              `\n            )}\n          >\n            {nodeNameText}\n          </span>\n        ) : null}\n        {node.symbol !== undefined ? <SymbolMarker /> : null}\n      </div>\n      {(expanded || childIsHover || isPathSelected) && children.length > 0 ? (\n        <div\n          css={css`\n            padding-left: 16px;\n          `}\n        >\n          {children}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import { css } from \"@emotion/core\";\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\nimport React from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport * as ts from \"typescript\";\nimport { createProgram } from \"./Compiler\";\nimport NodeDetails from \"./NodeDetails\";\nimport { useExpandStore } from \"./state/ExpandStore\";\nimport { useSelectionStore } from \"./state/SelectionStore\";\nimport { TreeNode } from \"./Tree\";\nimport { getNodeForPosition, throttle } from \"./Utils\";\n\nfunction Editor({\n  code,\n  editorRef,\n  onChange,\n}: {\n  code: string;\n  editorRef: { current: monacoEditor.editor.IStandaloneCodeEditor | undefined };\n  onChange: (code: string) => void;\n}) {\n  React.useEffect(() => {\n    const onResize = () => {\n      editorRef.current?.layout();\n    };\n    window.addEventListener(\"resize\", onResize);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  });\n  return (\n    <MonacoEditor\n      language=\"typescript\"\n      theme=\"vs-dark\"\n      value={code}\n      options={{\n        minimap: {\n          enabled: false,\n        },\n      }}\n      onChange={(newValue) => {\n        onChange(newValue);\n      }}\n      editorWillMount={(monaco) => {\n        monaco.languages.typescript.typescriptDefaults.setCompilerOptions({\n          target: monaco.languages.typescript.ScriptTarget.ESNext,\n          allowNonTsExtensions: true,\n          jsx: monaco.languages.typescript.JsxEmit.Preserve,\n        });\n      }}\n      editorDidMount={(editor) => {\n        editor.focus();\n        editorRef.current = editor;\n      }}\n    />\n  );\n}\n\nconst SourceFile = React.memo(\n  ({\n    sourceFile,\n    onNodeSelect,\n  }: {\n    sourceFile: ts.SourceFile;\n    onNodeSelect: (node: ts.Node) => void;\n  }) => {\n    return (\n      <div\n        css={css`\n          position: relative;\n        `}\n      >\n        <div>{sourceFile.fileName}</div>\n        <TreeNode node={sourceFile} path={[0]} onNodeSelect={onNodeSelect} />\n      </div>\n    );\n  }\n);\n\nconst Output = React.memo(\n  ({\n    sourceFile,\n    typeChecker,\n    editorRef,\n    setCode,\n  }: {\n    sourceFile: ts.SourceFile;\n    typeChecker: ts.TypeChecker;\n    editorRef: React.RefObject<\n      monacoEditor.editor.IStandaloneCodeEditor | undefined\n    >;\n    setCode: (code: string) => void;\n  }) => {\n    const selectNode = useSelectionStore((state) => state.setSelectedNode);\n    const selectedNode = useSelectionStore((state) => state.selectedNode);\n    const selectedNodeRef = React.useRef(selectedNode);\n    React.useEffect(() => {\n      selectedNodeRef.current = selectedNode;\n    });\n    const deltaDecorationsRef = React.useRef<Array<string>>([]);\n    const onNodeSelect = (node: ts.Node) => {\n      // @ts-ignore\n      window.$node = node;\n      selectNode(node);\n      if (editorRef.current !== undefined) {\n        const start = ts.getLineAndCharacterOfPosition(\n          sourceFile,\n          node.getStart(sourceFile)\n        );\n        const end = ts.getLineAndCharacterOfPosition(sourceFile, node.end);\n        const selection = new monacoEditor.Selection(\n          start.line + 1,\n          start.character + 1,\n          end.line + 1,\n          end.character + 1\n        );\n        const editor = editorRef.current;\n        if (editor) {\n          editor.setSelection(selection);\n          deltaDecorationsRef.current = editor.deltaDecorations(\n            deltaDecorationsRef.current,\n            [{ range: selection, options: { className: \"selected-text\" } }]\n          );\n          editor.revealRangeInCenterIfOutsideViewport(selection);\n        }\n      }\n    };\n    const sourceFileRef = React.useRef(sourceFile);\n    React.useEffect(() => {\n      sourceFileRef.current = sourceFile;\n      selectNode(undefined);\n      const editor = editorRef.current;\n      if (editor) {\n        deltaDecorationsRef.current = editor.deltaDecorations(\n          deltaDecorationsRef.current,\n          []\n        );\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sourceFile]);\n    React.useEffect(() => {\n      const editor = editorRef.current;\n      if (editor != null) {\n        const d = editor.onDidChangeCursorPosition((e) => {\n          if (e.source === \"api\") {\n            return;\n          }\n          const editorModel = editor.getModel();\n          if (editorModel === null) {\n            return;\n          }\n          const position = editorModel.getOffsetAt(e.position);\n          const node = getNodeForPosition(sourceFileRef.current, position);\n          if (node !== undefined) {\n            selectNode(node);\n            deltaDecorationsRef.current = editor.deltaDecorations(\n              deltaDecorationsRef.current,\n              []\n            );\n          }\n        });\n        return () => d.dispose();\n      }\n    });\n    React.useEffect(() => {\n      const onKeyDown = (e: KeyboardEvent) => {\n        const selectedNode = selectedNodeRef.current;\n        if (\n          document.activeElement === document.body &&\n          selectedNode !== undefined\n        ) {\n          switch (e.key) {\n            case \"ArrowLeft\":\n              if (selectedNode.parent !== undefined) {\n                onNodeSelect(selectedNode.parent);\n              }\n              break;\n            case \"ArrowRight\": {\n              let isFirstChild = true;\n              selectedNode.forEachChild((childNode) => {\n                if (isFirstChild) {\n                  onNodeSelect(childNode);\n                  isFirstChild = false;\n                }\n              });\n              break;\n            }\n            case \"ArrowDown\": {\n              const parentNode = selectedNode.parent;\n              if (parentNode !== undefined) {\n                let takeNextNode = false;\n                parentNode.forEachChild((childNode) => {\n                  if (takeNextNode) {\n                    onNodeSelect(childNode);\n                    takeNextNode = false;\n                  }\n                  if (childNode === selectedNode) {\n                    takeNextNode = true;\n                  }\n                });\n              }\n              break;\n            }\n            case \"ArrowUp\": {\n              const parentNode = selectedNode.parent;\n              if (parentNode !== undefined) {\n                let prevNode: ts.Node | undefined;\n                parentNode.forEachChild((childNode) => {\n                  if (childNode === selectedNode && prevNode !== undefined) {\n                    onNodeSelect(prevNode);\n                  } else {\n                    prevNode = childNode;\n                  }\n                });\n              }\n              break;\n            }\n          }\n        }\n      };\n      window.addEventListener(\"keydown\", onKeyDown);\n      return () => window.removeEventListener(\"keydown\", onKeyDown);\n    }, []);\n\n    return (\n      <div\n        css={css`\n          display: flex;\n          flex-direction: column;\n          font-family: SF Mono, Inconsolata, \"Courier New\", Courier, monospace;\n          font-size: var(--font-size-default);\n          height: 100%;\n          button {\n            font-family: SF Mono, Inconsolata, \"Courier New\", Courier, monospace;\n            font-size: var(--font-size-default);\n          }\n        `}\n      >\n        <div\n          css={css`\n            white-space: pre;\n            flex-grow: 1;\n            padding: 16px;\n            box-sizing: border-box;\n            overflow-y: auto;\n          `}\n        >\n          <SourceFile sourceFile={sourceFile} onNodeSelect={onNodeSelect} />\n        </div>\n        {selectedNode !== undefined ? (\n          <NodeDetails\n            typeChecker={typeChecker}\n            onNodeSelect={onNodeSelect}\n            sourceFile={sourceFile}\n            setCode={setCode}\n            key={selectedNode.pos + selectedNode.kind}\n          />\n        ) : null}\n      </div>\n    );\n  }\n);\n\nfunction throttleEnd(fn: (...args: Array<any>) => void, ms: number) {\n  let timeout: NodeJS.Timeout | undefined;\n  return (...args: Array<any>) => {\n    if (timeout !== undefined) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      fn(...args);\n      timeout = undefined;\n    }, ms);\n  };\n}\n\nfunction EditorResizer({\n  editorWidthRef,\n  setEditorWidth,\n}: {\n  editorWidthRef: React.RefObject<number>;\n  setEditorWidth: (width: number) => void;\n}) {\n  const onMouseMoveRef = React.useRef<(event: MouseEvent) => void>();\n  const onMouseUpRef = React.useRef<(event: MouseEvent) => void>();\n  const onMouseDown = (e: React.MouseEvent) => {\n    const startX = e.pageX;\n    const startWidthPx = (editorWidthRef.current! / 100) * window.innerWidth;\n    onMouseMoveRef.current = (e: MouseEvent) => {\n      const deltaX = e.pageX - startX;\n      const widthPx = startWidthPx + deltaX;\n      const newWidth = (widthPx / window.innerWidth) * 100;\n      setEditorWidth(newWidth);\n    };\n    onMouseUpRef.current = (e: MouseEvent) => {\n      window.removeEventListener(\"mousemove\", onMouseMoveRef.current!);\n      window.removeEventListener(\"mouseup\", onMouseUpRef.current!);\n      onMouseMoveRef.current = undefined;\n      onMouseUpRef.current = undefined;\n    };\n    window.addEventListener(\"mousemove\", onMouseMoveRef.current);\n    window.addEventListener(\"mouseup\", onMouseUpRef.current);\n  };\n  React.useEffect(() => {\n    return () => {\n      if (onMouseMoveRef.current !== undefined) {\n        window.removeEventListener(\"mousemove\", onMouseMoveRef.current!);\n      }\n      if (onMouseUpRef.current !== undefined) {\n        window.removeEventListener(\"mouseup\", onMouseUpRef.current!);\n      }\n    };\n  }, []);\n  return (\n    <div\n      css={css`\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 8px;\n        bottom: 0;\n        cursor: ew-resize;\n      `}\n      onMouseDown={onMouseDown}\n    ></div>\n  );\n}\n\nconst EXAMPLE_CODE = `class Person {\n  protected name: string;\n  protected constructor(theName: string) { this.name = theName; }\n}\n\nclass Employee extends Person {\n  private department: string;\n\n  constructor(name: string, department: string) {\n      super(name);\n      this.department = department;\n  }\n}\n\nexport const susie = new Employee(\"Susie\", \"Sales\");\n`;\n\nfunction App() {\n  const [code, setCode] = React.useState(\n    () => localStorage.getItem(\"code\") ?? EXAMPLE_CODE\n  );\n  const collapseAll = useExpandStore((state) => state.collapseAll);\n  const editorWidthRef = React.useRef(50);\n  const editorDivRef = React.useRef<HTMLDivElement>(null);\n  const editorRef = React.useRef<monacoEditor.editor.IStandaloneCodeEditor>();\n  const editorLayout = React.useMemo(\n    () =>\n      throttle(() => {\n        editorRef.current?.layout();\n      }, 100),\n    []\n  );\n  const setEditorWidth = (editorWidth: number) => {\n    editorWidthRef.current = editorWidth;\n    const editorDiv = editorDivRef.current;\n    if (editorDiv !== null) {\n      editorDiv.style.width = `${editorWidth}%`;\n      editorDiv.style.minWidth = `${editorWidth}%`;\n      editorLayout();\n    }\n  };\n  const [{ sourceFile, typeChecker }, updateProgram] = React.useState(() =>\n    createProgram(code)\n  );\n  const updateProgramThrottled = React.useMemo(\n    () =>\n      throttleEnd((code) => {\n        updateProgram(createProgram(code));\n      }, 500),\n    []\n  );\n  React.useEffect(() => {\n    updateProgramThrottled(code);\n  }, [updateProgramThrottled, code]);\n  // @ts-ignore\n  window.$typeChecker = typeChecker;\n  React.useEffect(() => {\n    collapseAll();\n    localStorage.setItem(\"code\", code);\n  }, [code]);\n  return (\n    <div\n      css={css`\n        display: flex;\n        height: 100vh;\n        overflow: hidden;\n      `}\n    >\n      <div\n        css={css`\n          width: 50%;\n          min-width: 50%;\n        `}\n        ref={editorDivRef}\n      >\n        <Editor code={code} editorRef={editorRef} onChange={setCode} />\n      </div>\n      <div\n        css={css`\n          flex-grow: 1;\n          overflow: auto;\n          position: relative;\n        `}\n      >\n        <Output\n          sourceFile={sourceFile}\n          setCode={setCode}\n          typeChecker={typeChecker}\n          editorRef={editorRef}\n        />\n        <EditorResizer\n          editorWidthRef={editorWidthRef}\n          setEditorWidth={setEditorWidth}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { css, Global } from \"@emotion/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global\n      styles={css`\n        :root {\n          --font-size-default: 14px;\n          --line-height: 16px;\n          --dark: #202020;\n          --gray: #808080;\n          --light: #c0c0c0;\n          --very-light: #e0e0e0;\n          --purple: #ae6ab4;\n          --teal: #21b5c2;\n          --white: #ffffff;\n        }\n        .monaco-editor .selected-text {\n          background-color: #264f78 !important;\n        }\n      `}\n    />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}